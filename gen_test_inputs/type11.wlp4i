start BOF procedures EOF
BOF BOF
procedures procedure procedures
procedure INT ID LPAREN params RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
ID isInteger
LPAREN (
params paramlist
paramlist dcl
dcl type ID
type INT
INT int
ID id
RPAREN )
LBRACE {
dcls
statements
RETURN return
expr term
term factor
factor NUM
NUM 1
SEMI ;
RBRACE }
procedures main
main INT WAIN LPAREN dcl COMMA dcl RPAREN LBRACE dcls statements RETURN expr SEMI RBRACE
INT int
WAIN wain
LPAREN (
dcl type ID
type INT STAR
INT int
STAR *
ID a
COMMA ,
dcl type ID
type INT
INT int
ID b
RPAREN )
LBRACE {
dcls
statements statements statement
statements
statement IF LPAREN test RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
IF if
LPAREN (
test expr EQ expr
expr term
term factor
factor ID
ID a
EQ ==
expr term
term factor
factor ID
ID a
RPAREN )
LBRACE {
statements statements statement
statements
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID LPAREN RPAREN
ID isInteger
LPAREN (
RPAREN )
RPAREN )
SEMI ;
RBRACE }
ELSE else
LBRACE {
statements statements statement
statements
statement PRINTLN LPAREN expr RPAREN SEMI
PRINTLN println
LPAREN (
expr term
term factor
factor ID LPAREN arglist RPAREN
ID isInteger
LPAREN (
arglist expr
expr term
term term STAR factor
term factor
factor STAR factor
STAR *
factor NULL
NULL NULL
STAR *
factor NUM
NUM 0
RPAREN )
RPAREN )
SEMI ;
RBRACE }
RETURN return
expr term
term factor
factor NUM
NUM 0
SEMI ;
RBRACE }
EOF EOF